#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D image;

layout(location = 0) uniform vec3 normal;
layout(location = 1) uniform vec3 color;

#define PI 3.141592265359f

void main() {
  ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
  vec2 step = vec2((2.f * PI) / gl_NumWorkGroups.x, PI / gl_NumWorkGroups.y);
  vec2 coordinate = texelCoord * step; // (lon, lat)
  float z = sin(coordinate.y) * cos(coordinate.x);
  float y = sin(coordinate.y) * sin(coordinate.x);
  float x = cos(coordinate.y);
  vec3 point = vec3(x, y, z);
  float angle = acos(dot(point, normal) / (length(point) * length(normal)));
  vec4 col = vec4(color, 1.f / angle);
  if (col.a < 0.9f) col = imageLoad(image, texelCoord).rgba;

  imageStore(image, texelCoord, col);
}
